#define _WINSOCK_DEPRECATED_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <WinSock2.h>
#define BUFFSIZE 1024

void ErrorHanding(char *message);

int main(int argc, char *argv[])
{
	WSADATA wsaData;
	SOCKET hSocket;
	SOCKADDR_IN servAddr;
	char message[BUFFSIZE];
	int mystrlen;
	if (argc != 3)
	{
		printf("Usage : %s <IP><Port>\n", argv[0]);
		exit(1);
	}

	if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0)
		ErrorHanding("WSAStartup() Error");
	hSocket = socket(PF_INET, SOCK_STREAM, 0);
	if (hSocket == INVALID_SOCKET)
		ErrorHanding("socket() Error");

	memset(&servAddr, 0, sizeof(servAddr));
	servAddr.sin_family = AF_INET;
	servAddr.sin_addr.s_addr = inet_addr(argv[1]);
	servAddr.sin_port = htons(atoi(argv[2]));

	if (connect(hSocket, (SOCKADDR*)&servAddr, sizeof(servAddr)) == INVALID_SOCKET)
		ErrorHanding("connect() Error");
	else
		puts("Connect......");
	while (1)
	{
		fputs("Input message(Q to quit):", stdout);
		fgets(message, BUFFSIZE, stdin);
		if (!strcmp(message, "q\n") || !strcmp(message, "Q\n"))
		{
			break;
		}
		//发送数据
		mystrlen = send(hSocket,message,strlen(message), 0);
		//接收数据
		mystrlen = recv(hSocket, message, BUFFSIZE - 1, 0);
		message[mystrlen] = 0;
		printf("Message from Server:%s", message);
	}
	closesocket(hSocket);
	WSACleanup();
	return 0;
}

void ErrorHanding(char *message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}
